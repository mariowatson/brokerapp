/*!
 * ASP.NET SignalR JavaScript Library 2.4.3
 * http://signalr.net/
 *
 * Copyright (c) .NET Foundation. All rights reserved.
 * Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
 *
 */

/// <reference path="..\..\SignalR.Client.JS\Scripts\jquery-1.6.4.js" />
/// <reference path="jquery.signalR.js" />
(function ($, window, undefined) {
    /// <param name="$" type="jQuery" />
    "use strict";

    if (typeof ($.signalR) !== "function") {
        throw new Error("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.");
    }

    var signalR = $.signalR;

    function makeProxyCallback(hub, callback) {
        return function () {
            // Call the client hub method
            callback.apply(hub, $.makeArray(arguments));
        };
    }

    function registerHubProxies(instance, shouldSubscribe) {
        var key, hub, memberKey, memberValue, subscriptionMethod;

        for (key in instance) {
            if (instance.hasOwnProperty(key)) {
                hub = instance[key];

                if (!(hub.hubName)) {
                    // Not a client hub
                    continue;
                }

                if (shouldSubscribe) {
                    // We want to subscribe to the hub events
                    subscriptionMethod = hub.on;
                } else {
                    // We want to unsubscribe from the hub events
                    subscriptionMethod = hub.off;
                }

                // Loop through all members on the hub and find client hub functions to subscribe/unsubscribe
                for (memberKey in hub.client) {
                    if (hub.client.hasOwnProperty(memberKey)) {
                        memberValue = hub.client[memberKey];

                        if (!$.isFunction(memberValue)) {
                            // Not a client hub function
                            continue;
                        }

                        // Use the actual user-provided callback as the "identity" value for the registration.
                        subscriptionMethod.call(hub, memberKey, makeProxyCallback(hub, memberValue), memberValue);
                    }
                }
            }
        }
    }

    $.hubConnection.prototype.createHubProxies = function () {
        var proxies = {};
        this.starting(function () {
            // Register the hub proxies as subscribed
            // (instance, shouldSubscribe)
            registerHubProxies(proxies, true);

            this._registerSubscribedHubs();
        }).disconnected(function () {
            // Unsubscribe all hub proxies when we "disconnect".  This is to ensure that we do not re-add functional call backs.
            // (instance, shouldSubscribe)
            registerHubProxies(proxies, false);
        });

        proxies['siteHub'] = this.createHubProxy('siteHub'); 
        proxies['siteHub'].client = { };
        proxies['siteHub'].server = {
            broker_AddNote: function (innerId, text, reserved) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_AddNote"], $.makeArray(arguments)));
             },

            broker_DeleteDocument: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_DeleteDocument"], $.makeArray(arguments)));
             },

            broker_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_LoadById"], $.makeArray(arguments)));
             },

            broker_RemoveNote: function (innerId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_RemoveNote"], $.makeArray(arguments)));
             },

            broker_SummaryLoadById: function (brokerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_SummaryLoadById"], $.makeArray(arguments)));
             },

            broker_VatNumberExist: function (piva) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Broker_VatNumberExist"], $.makeArray(arguments)));
             },

            brokerStructure_AddNode: function (parentNodeId, brokerId, percentage, user_IdentityName, user_EmailAddress, user_GivenName, user_Surname) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["BrokerStructure_AddNode"], $.makeArray(arguments)));
             },

            brokerStructure_EditNode: function (nodeId, percentage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["BrokerStructure_EditNode"], $.makeArray(arguments)));
             },

            brokerStructure_IsPercentageValid: function (value, parentNodeId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["BrokerStructure_IsPercentageValid"], $.makeArray(arguments)));
             },

            brokerStructure_LoadByFilter: function (name, code, innerId, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["BrokerStructure_LoadByFilter"], $.makeArray(arguments)));
             },

            brokerStructure_LoadPercentageData: function (nodeId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["BrokerStructure_LoadPercentageData"], $.makeArray(arguments)));
             },

            company_Edit: function (id, vatNumberOrTaxCode, name, notes, fax, telefono, email, pec, idComune, indirizzo, logo, filename) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Company_Edit"], $.makeArray(arguments)));
             },

            company_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Company_LoadById"], $.makeArray(arguments)));
             },

            company_New: function (vatNumberOrTaxCode, name, notes, fax, telefono, email, pec, idComune, indirizzo, logo, filename) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Company_New"], $.makeArray(arguments)));
             },

            company_PivaExists: function (vatNumber) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Company_PivaExists"], $.makeArray(arguments)));
             },

            companySummary_LoadByFilter: function (name, taxCode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["CompanySummary_LoadByFilter"], $.makeArray(arguments)));
             },

            contractor_AddMandanti: function (innerIdContractor, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_AddMandanti"], $.makeArray(arguments)));
             },

            contractor_AddNote: function (innerId, text, reserved) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_AddNote"], $.makeArray(arguments)));
             },

            contractor_ChangeStatus: function (innerId, enabled, statusNote) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_ChangeStatus"], $.makeArray(arguments)));
             },

            contractor_DeleteDocument: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_DeleteDocument"], $.makeArray(arguments)));
             },

            contractor_DeleteRTIContractor: function (contractorId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_DeleteRTIContractor"], $.makeArray(arguments)));
             },

            contractor_DocumentLoadByFilters: function (contractorId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_DocumentLoadByFilters"], $.makeArray(arguments)));
             },

            contractor_DocumentoLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_DocumentoLoadById"], $.makeArray(arguments)));
             },

            contractor_Easyfintech_AddAnalystOverrideToAnalysis: function (analysisId, analystValue, analystNote, noGeneralHaircuts) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_Easyfintech_AddAnalystOverrideToAnalysis"], $.makeArray(arguments)));
             },

            contractor_Easyfintech_AnalysisExists: function (contractorId, level) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_Easyfintech_AnalysisExists"], $.makeArray(arguments)));
             },

            contractor_Easyfintech_PurchaseAnalysis: function (contractorId, level) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_Easyfintech_PurchaseAnalysis"], $.makeArray(arguments)));
             },

            contractor_Easyfintech_RemoveExistingManualBalanceFromAnalysis: function (analysisId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_Easyfintech_RemoveExistingManualBalanceFromAnalysis"], $.makeArray(arguments)));
             },

            contractor_GroupEdit: function (id, taxCode, denominazione, rea, piva, importoGaranzia, idRTI) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_GroupEdit"], $.makeArray(arguments)));
             },

            contractor_GroupNew: function (parentId, taxCode, denominazione, rea, piva, importoGaranzia, idRTI) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_GroupNew"], $.makeArray(arguments)));
             },

            contractor_IsNatural: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_IsNatural"], $.makeArray(arguments)));
             },

            contractor_LegalEdit: function (id, taxCode, name, rea, piva, idComune, indirizzo, telefono, fax, email, pec, codiceFiscaleR, nameR, surnameR, idComuneR, indirizzoR, importoGaranzia) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LegalEdit"], $.makeArray(arguments)));
             },

            contractor_LegalNew: function (taxCode, name, rea, piva, idComune, indirizzo, telefono, fax, email, pec, codiceFiscaleR, nameR, surnameR, idComuneR, indirizzoR, importoGaranzia) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LegalNew"], $.makeArray(arguments)));
             },

            contractor_LoadAnalysis: function (contractorId, companyIds) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LoadAnalysis"], $.makeArray(arguments)));
             },

            contractor_LoadBondLimit: function (contractorId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LoadBondLimit"], $.makeArray(arguments)));
             },

            contractor_LoadByFilters: function (id, name, taxCode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LoadByFilters"], $.makeArray(arguments)));
             },

            contractor_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LoadById"], $.makeArray(arguments)));
             },

            contractor_LoadStatusHistory: function (contractorId, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_LoadStatusHistory"], $.makeArray(arguments)));
             },

            contractor_MandantiLoadByFilters: function (contractorInnerId, id, name, taxCode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_MandantiLoadByFilters"], $.makeArray(arguments)));
             },

            contractor_NaturalEdit: function (id, taxCode, name, surname, idComune, indirizzo, piva, rea, telefono, fax, cellulare, email, pec, importoGaranzia) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_NaturalEdit"], $.makeArray(arguments)));
             },

            contractor_NaturalNew: function (taxCode, name, surname, idComune, indirizzo, piva, rea, telefono, fax, cellulare, email, pec, importoGaranzia) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_NaturalNew"], $.makeArray(arguments)));
             },

            contractor_RemoveNote: function (innerId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_RemoveNote"], $.makeArray(arguments)));
             },

            contractor_SaveHumanAssessedFinancialCapacity: function (contractorId, value, note) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_SaveHumanAssessedFinancialCapacity"], $.makeArray(arguments)));
             },

            contractor_SaveHumanAssessedRiskCeiling: function (contractorId, value, note) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_SaveHumanAssessedRiskCeiling"], $.makeArray(arguments)));
             },

            contractor_SummaryLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_SummaryLoadById"], $.makeArray(arguments)));
             },

            contractor_ToggleNoteVisibility: function (innerId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_ToggleNoteVisibility"], $.makeArray(arguments)));
             },

            contractor_VATNumberExists: function (vatNumber) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Contractor_VATNumberExists"], $.makeArray(arguments)));
             },

            dictionary_GetCap: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetCap"], $.makeArray(arguments)));
             },

            dictionary_GetClasseDocumentoText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetClasseDocumentoText"], $.makeArray(arguments)));
             },

            dictionary_GetComuneText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetComuneText"], $.makeArray(arguments)));
             },

            dictionary_GetGenereText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetGenereText"], $.makeArray(arguments)));
             },

            dictionary_GetProvincia: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetProvincia"], $.makeArray(arguments)));
             },

            dictionary_GetProvinciaText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetProvinciaText"], $.makeArray(arguments)));
             },

            dictionary_GetRegioneText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetRegioneText"], $.makeArray(arguments)));
             },

            dictionary_GetRTIText: function (dataItem) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Dictionary_GetRTIText"], $.makeArray(arguments)));
             },

            documentBroker_LoadByFilters: function (innerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["DocumentBroker_LoadByFilters"], $.makeArray(arguments)));
             },

            documentoBroker_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["DocumentoBroker_LoadById"], $.makeArray(arguments)));
             },

            general_DeleteIdentityDocument: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_DeleteIdentityDocument"], $.makeArray(arguments)));
             },

            general_IsEmail: function (email) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_IsEmail"], $.makeArray(arguments)));
             },

            general_IsTaxCode: function (taxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_IsTaxCode"], $.makeArray(arguments)));
             },

            general_IsVatNumber: function (vatNumber) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_IsVatNumber"], $.makeArray(arguments)));
             },

            general_IsVatNumberOrTaxCode: function (vatNumberOrTaxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_IsVatNumberOrTaxCode"], $.makeArray(arguments)));
             },

            general_LegalTaxCodeExist: function (codiceFiscale) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_LegalTaxCodeExist"], $.makeArray(arguments)));
             },

            general_LoadIdentityDocument: function (naturalPersonId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_LoadIdentityDocument"], $.makeArray(arguments)));
             },

            general_NaturalTaxCodeExist: function (codiceFiscale) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["General_NaturalTaxCodeExist"], $.makeArray(arguments)));
             },

            isNaturalBroker: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["IsNaturalBroker"], $.makeArray(arguments)));
             },

            legalPersonBroker_Edit: function (id, taxCode, name, rea, rui, idComune, indirizzo, telefono, fax, email, pec, piva, taxCode2, name2, surname2, comuneRappId, indirizzo2) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonBroker_Edit"], $.makeArray(arguments)));
             },

            legalPersonBroker_New: function (taxCode, name, rea, rui, idComune, indirizzo, telefono, fax, email, pec, piva, taxCode2, name2, surname2, comuneRappId, indirizzo2) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonBroker_New"], $.makeArray(arguments)));
             },

            legalPersonBroker_TaxCodeExists: function (taxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonBroker_TaxCodeExists"], $.makeArray(arguments)));
             },

            legalPersonContractor_TaxCodeExists: function (taxcode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonContractor_TaxCodeExists"], $.makeArray(arguments)));
             },

            legalPersonPayee_Edit: function (id, taxCode, name, idComune, indirizzo, telefono, fax, email, pec, piva, rea, taxCode2, name2, surname2, indirizzo2, comuneRappId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonPayee_Edit"], $.makeArray(arguments)));
             },

            legalPersonPayee_New: function (taxCode, name, idComune, indirizzo, telefono, fax, email, pec, piva, rea, taxCode2, name2, surname2, indirizzo2, comuneRappId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonPayee_New"], $.makeArray(arguments)));
             },

            legalPersonPayee_TaxCodeExists: function (taxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["LegalPersonPayee_TaxCodeExists"], $.makeArray(arguments)));
             },

            naturalPersonBroker_Edit: function (id, taxCode, name, surname, rea, rui, idComune, indirizzo, telefono, fax, email, pec, cel, piva) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonBroker_Edit"], $.makeArray(arguments)));
             },

            naturalPersonBroker_New: function (taxCode, name, surname, rea, rui, idComune, indirizzo, telefono, fax, email, pec, cel, piva) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonBroker_New"], $.makeArray(arguments)));
             },

            naturalPersonBroker_TaxCodeExists: function (taxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonBroker_TaxCodeExists"], $.makeArray(arguments)));
             },

            naturalPersonContractor_TaxCodeExists: function (taxcode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonContractor_TaxCodeExists"], $.makeArray(arguments)));
             },

            naturalPersonPayee_Edit: function (id, taxCode, name, surname, idComune, indirizzo, telefono, fax, email, pec, cel, piva, rea) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonPayee_Edit"], $.makeArray(arguments)));
             },

            naturalPersonPayee_New: function (taxCode, name, surname, idComune, indirizzo, telefono, fax, email, pec, cel, piva, rea) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonPayee_New"], $.makeArray(arguments)));
             },

            naturalPersonPayee_TaxCodeExists: function (taxCode) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["NaturalPersonPayee_TaxCodeExists"], $.makeArray(arguments)));
             },

            paperwork_AccettaBozza: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_AccettaBozza"], $.makeArray(arguments)));
             },

            paperwork_ActLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_ActLoadById"], $.makeArray(arguments)));
             },

            paperwork_ActRemove: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_ActRemove"], $.makeArray(arguments)));
             },

            paperwork_ActsLoadByFilters: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_ActsLoadByFilters"], $.makeArray(arguments)));
             },

            paperwork_AddContractor: function (paperworkId, innerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_AddContractor"], $.makeArray(arguments)));
             },

            paperwork_AddCoobbligato: function (paperworkId, innerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_AddCoobbligato"], $.makeArray(arguments)));
             },

            paperwork_AddPayee: function (paperworkId, innerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_AddPayee"], $.makeArray(arguments)));
             },

            paperwork_Annulla: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_Annulla"], $.makeArray(arguments)));
             },

            paperwork_Boccia: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_Boccia"], $.makeArray(arguments)));
             },

            paperwork_ChangeOwner: function (paperworkId, ownerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_ChangeOwner"], $.makeArray(arguments)));
             },

            paperwork_CreateExtensionUsingPremioAllaFirma: function (rootPaperworkId, asImported, oggetto, digitalSignature, importo, diritti, decorrenza, scadenza, premioAllaFirma, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_CreateExtensionUsingPremioAllaFirma"], $.makeArray(arguments)));
             },

            paperwork_CreateExtensionUsingTasso: function (rootPaperworkId, asImported, oggetto, digitalSignature, importo, tasso, diritti, decorrenza, scadenza, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_CreateExtensionUsingTasso"], $.makeArray(arguments)));
             },

            paperwork_DeleteAppendix: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DeleteAppendix"], $.makeArray(arguments)));
             },

            paperwork_DeleteContractor: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DeleteContractor"], $.makeArray(arguments)));
             },

            paperwork_DeleteCoobbligato: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DeleteCoobbligato"], $.makeArray(arguments)));
             },

            paperwork_DeleteDocument: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DeleteDocument"], $.makeArray(arguments)));
             },

            paperwork_DeletePayee: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DeletePayee"], $.makeArray(arguments)));
             },

            paperwork_DocumentiBozzaLoadByFilters: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DocumentiBozzaLoadByFilters"], $.makeArray(arguments)));
             },

            paperwork_DocumentLoadByFilters: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DocumentLoadByFilters"], $.makeArray(arguments)));
             },

            paperwork_DocumentoBozzaLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DocumentoBozzaLoadById"], $.makeArray(arguments)));
             },

            paperwork_DocumentoBozzaRemove: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DocumentoBozzaRemove"], $.makeArray(arguments)));
             },

            paperwork_DocumentoLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_DocumentoLoadById"], $.makeArray(arguments)));
             },

            paperwork_EditContractor: function (paperworkId, innerId, riskParticipationValue, riskParticipationNote, collateral, collateralNote) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EditContractor"], $.makeArray(arguments)));
             },

            paperwork_EditCoobbligato: function (paperworkId, innerId, riskParticipationValue, riskParticipationNote, collateral, collateralNote) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EditCoobbligato"], $.makeArray(arguments)));
             },

            paperwork_EditUsingPremioAllaFirma: function (paperworkId, ownerId, candidateCompanyId, tipoPaperwork, oggetto, actNumber, digitalSignature, importo, diritti, decorrenza, scadenza, premioAllaFirma, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EditUsingPremioAllaFirma"], $.makeArray(arguments)));
             },

            paperwork_EditUsingTasso: function (paperworkId, ownerId, candidateCompanyId, tipoPaperwork, oggetto, actNumber, digitalSignature, importo, tasso, diritti, decorrenza, scadenza, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EditUsingTasso"], $.makeArray(arguments)));
             },

            paperwork_EmettiBozza: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EmettiBozza"], $.makeArray(arguments)));
             },

            paperwork_EmettiPolizza: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EmettiPolizza"], $.makeArray(arguments)));
             },

            paperwork_EvalUsingPremioAllaFirma: function (tipoPaperwork, importo, diritti, decorrenza, scadenza, premioAllaFirma, asExtension) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EvalUsingPremioAllaFirma"], $.makeArray(arguments)));
             },

            paperwork_EvalUsingTasso: function (tipoPaperwork, importo, tasso, diritti, decorrenza, scadenza, asExtension, usaTassoLordo) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_EvalUsingTasso"], $.makeArray(arguments)));
             },

            paperwork_LoadAnalysis: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadAnalysis"], $.makeArray(arguments)));
             },

            paperwork_LoadAppendix: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadAppendix"], $.makeArray(arguments)));
             },

            paperwork_LoadByFilters: function (id, status, type, actType, contractor, payee, broker, companyId, draftContractId, contract, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadByFilters"], $.makeArray(arguments)));
             },

            paperwork_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadById"], $.makeArray(arguments)));
             },

            paperwork_LoadMessagesByFilters: function (paperworkId, mode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadMessagesByFilters"], $.makeArray(arguments)));
             },

            paperwork_LoadOwnerHistory: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_LoadOwnerHistory"], $.makeArray(arguments)));
             },

            paperwork_MoveToTrash: function (paperworkId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_MoveToTrash"], $.makeArray(arguments)));
             },

            paperwork_NewUsingPremioAllaFirma: function (ownerId, candidateCompanyId, contractorInnerId, tipoPaperwork, oggetto, actNumber, digitalSignature, importo, diritti, decorrenza, scadenza, premioAllaFirma, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_NewUsingPremioAllaFirma"], $.makeArray(arguments)));
             },

            paperwork_NewUsingTasso: function (ownerId, candidateCompanyId, contractorInnerId, tipoPaperwork, oggetto, actNumber, digitalSignature, importo, tasso, diritti, decorrenza, scadenza, prorogaDiritti, prorogaDecorrenza, prorogaScadenza) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_NewUsingTasso"], $.makeArray(arguments)));
             },

            paperwork_Preapprova: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_Preapprova"], $.makeArray(arguments)));
             },

            paperwork_RichiediDelibera: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_RichiediDelibera"], $.makeArray(arguments)));
             },

            paperwork_RichiediPolizza: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_RichiediPolizza"], $.makeArray(arguments)));
             },

            paperwork_RiportaInAttesa: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_RiportaInAttesa"], $.makeArray(arguments)));
             },

            paperwork_SearchContractors: function (paperworkId, id, name, taxCode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_SearchContractors"], $.makeArray(arguments)));
             },

            paperwork_SearchPayees: function (paperworkId, id, name, taxCode, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_SearchPayees"], $.makeArray(arguments)));
             },

            paperwork_SendMessage: function (paperworkId, text, reserved) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_SendMessage"], $.makeArray(arguments)));
             },

            paperwork_SpecialAcceptance: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_SpecialAcceptance"], $.makeArray(arguments)));
             },

            paperwork_SummaryLoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_SummaryLoadById"], $.makeArray(arguments)));
             },

            paperwork_Svincola: function (paperworkId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Paperwork_Svincola"], $.makeArray(arguments)));
             },

            payee_AddNote: function (innerId, text, reserved) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_AddNote"], $.makeArray(arguments)));
             },

            payee_ChangeStatus: function (innerId, enabled, statusNote) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_ChangeStatus"], $.makeArray(arguments)));
             },

            payee_LoadByFilter: function (id, nome, codiceFiscale, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_LoadByFilter"], $.makeArray(arguments)));
             },

            payee_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_LoadById"], $.makeArray(arguments)));
             },

            payee_RemoveNote: function (innerId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_RemoveNote"], $.makeArray(arguments)));
             },

            payee_SummaryLoadById: function (payeeId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_SummaryLoadById"], $.makeArray(arguments)));
             },

            payee_ToggleNoteVisibility: function (innerId, id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_ToggleNoteVisibility"], $.makeArray(arguments)));
             },

            payee_VATNumberExists: function (vatNumber) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Payee_VATNumberExists"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_AddCoobligor: function (paperworkId, innerId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_AddCoobligor"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_Edit: function (brokerNodeId, candidateCompanyId, contractorId, type, proposingBrokerNodeId, maxAuthorizedAmount, rate, minNetPremium, effectiveDate, expirationDate, signatureTypeId, conditions, clauses, sepaBank, sepaIban, sepaPaymentTypeId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_Edit"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_EmettiOfferta: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_EmettiOfferta"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_EmettiPolizza: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_EmettiPolizza"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_LoadOrCreate: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_LoadOrCreate"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_Preapprova: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_Preapprova"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_RemoveCoobligor: function (paperworkId, dataItemId) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_RemoveCoobligor"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_RichiediDelibera: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_RichiediDelibera"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_RiportaInAttesa: function (brokerNodeId, candidateCompanyId, contractorId, type) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_RiportaInAttesa"], $.makeArray(arguments)));
             },

            riskCeilingPaperwork_SearchCoobligors: function (paperworkId, innerId, taxCode, name, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["RiskCeilingPaperwork_SearchCoobligors"], $.makeArray(arguments)));
             },

            search_GetResults: function (types, keys, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Search_GetResults"], $.makeArray(arguments)));
             },

            search_GetUrl: function (types, keys) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["Search_GetUrl"], $.makeArray(arguments)));
             },

            user_Edit: function (id, name, surname, email, enabled, statusNote) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_Edit"], $.makeArray(arguments)));
             },

            user_EmailExists: function (email) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_EmailExists"], $.makeArray(arguments)));
             },

            user_LoadByFilter: function (username, email, surname, name, delegator, pageIndex, elementsPerPage) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_LoadByFilter"], $.makeArray(arguments)));
             },

            user_LoadById: function (id) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_LoadById"], $.makeArray(arguments)));
             },

            user_New: function (idCompany, idBroker, level, name, surname, username, email) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_New"], $.makeArray(arguments)));
             },

            user_UserNameExists: function (username) {
                return proxies['siteHub'].invoke.apply(proxies['siteHub'], $.merge(["User_UserNameExists"], $.makeArray(arguments)));
             }
        };

        return proxies;
    };

    signalR.hub = $.hubConnection("/signalr", { useDefaultPath: false });
    $.extend(signalR, signalR.hub.createHubProxies());

}(window.jQuery, window));
